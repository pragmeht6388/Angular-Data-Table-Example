private static byte[] CompressFile(string inputFileName, CompressionAlgorithmTag algorithm)
{
    // Define a safe base directory where files are allowed to be read from
    var safeBasePath = Path.GetFullPath("AllowedDirectory");

    // Combine the safe base path with the file name
    var safeFullPath = Path.GetFullPath(Path.Combine(safeBasePath, inputFileName));

    // Ensure the file stays within the allowed directory (prevent path traversal)
    if (!safeFullPath.StartsWith(safeBasePath, StringComparison.OrdinalIgnoreCase))
    {
        throw new UnauthorizedAccessException("Invalid file path access detected.");
    }

    using var bout = new MemoryStream();
    var comData = new PgpCompressedDataGenerator(algorithm);

    // Use the safe file path
    using (var fileStream = File.OpenRead(safeFullPath))
    {
        PgpUtilities.WriteFileToLiteralData(comData.Open(bout), PgpLiteralData.Binary, new FileInfo(safeFullPath));
    }

    comData.Close();
    return bout.ToArray();
}
